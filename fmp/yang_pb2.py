# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fmp/yang.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='fmp/yang.proto',
  package='fmp',
  syntax='proto3',
  serialized_options=b'Z\024arista/resources/fmp',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0e\x66mp/yang.proto\x12\x03\x66mp\"\x1b\n\nMACAddress\x12\r\n\x05value\x18\x01 \x01(\tB\x16Z\x14\x61rista/resources/fmpb\x06proto3'
)




_MACADDRESS = _descriptor.Descriptor(
  name='MACAddress',
  full_name='fmp.MACAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='fmp.MACAddress.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=50,
)

DESCRIPTOR.message_types_by_name['MACAddress'] = _MACADDRESS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MACAddress = _reflection.GeneratedProtocolMessageType('MACAddress', (_message.Message,), {
  'DESCRIPTOR' : _MACADDRESS,
  '__module__' : 'fmp.yang_pb2'
  # @@protoc_insertion_point(class_scope:fmp.MACAddress)
  })
_sym_db.RegisterMessage(MACAddress)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
