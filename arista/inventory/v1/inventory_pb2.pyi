"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import fmp.inet_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _StreamingStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _StreamingStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StreamingStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STREAMING_STATUS_UNSPECIFIED: _StreamingStatus.ValueType  # 0
    STREAMING_STATUS_INACTIVE: _StreamingStatus.ValueType  # 1
    """STREAMING_STATUS_INACTIVE indicates the device is not streaming telemetry."""

    STREAMING_STATUS_ACTIVE: _StreamingStatus.ValueType  # 2
    """STREAMING_STATUS_ACTIVE indicates the device is streaming telemetry."""

class StreamingStatus(_StreamingStatus, metaclass=_StreamingStatusEnumTypeWrapper):
    """StreamingStatus defines the status of telemetry streaming for a device."""
    pass

STREAMING_STATUS_UNSPECIFIED: StreamingStatus.ValueType  # 0
STREAMING_STATUS_INACTIVE: StreamingStatus.ValueType  # 1
"""STREAMING_STATUS_INACTIVE indicates the device is not streaming telemetry."""

STREAMING_STATUS_ACTIVE: StreamingStatus.ValueType  # 2
"""STREAMING_STATUS_ACTIVE indicates the device is streaming telemetry."""

global___StreamingStatus = StreamingStatus


class _OnboardingStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _OnboardingStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OnboardingStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ONBOARDING_STATUS_UNSPECIFIED: _OnboardingStatus.ValueType  # 0
    ONBOARDING_STATUS_IN_PROGRESS: _OnboardingStatus.ValueType  # 1
    """ONBOARDING_STATUS_IN_PROGRESS indicates onboarding is in progress."""

    ONBOARDING_STATUS_FAILURE: _OnboardingStatus.ValueType  # 2
    """ONBOARDING_STATUS_FAILURE indicates onboarding failed."""

    ONBOARDING_STATUS_SUCCESS: _OnboardingStatus.ValueType  # 3
    """ONBOARDING_STATUS_SUCCESS indicates onboarding succeeded."""

class OnboardingStatus(_OnboardingStatus, metaclass=_OnboardingStatusEnumTypeWrapper):
    """OnboardingStatus defines the set of possible states in the onboarding process
    for a device.
    """
    pass

ONBOARDING_STATUS_UNSPECIFIED: OnboardingStatus.ValueType  # 0
ONBOARDING_STATUS_IN_PROGRESS: OnboardingStatus.ValueType  # 1
"""ONBOARDING_STATUS_IN_PROGRESS indicates onboarding is in progress."""

ONBOARDING_STATUS_FAILURE: OnboardingStatus.ValueType  # 2
"""ONBOARDING_STATUS_FAILURE indicates onboarding failed."""

ONBOARDING_STATUS_SUCCESS: OnboardingStatus.ValueType  # 3
"""ONBOARDING_STATUS_SUCCESS indicates onboarding succeeded."""

global___OnboardingStatus = OnboardingStatus


class _DecommissioningStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DecommissioningStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DecommissioningStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DECOMMISSIONING_STATUS_UNSPECIFIED: _DecommissioningStatus.ValueType  # 0
    DECOMMISSIONING_STATUS_IN_PROGRESS: _DecommissioningStatus.ValueType  # 1
    """DECOMMISSIONING_STATUS_IN_PROGRESS indicates decommissioning is in progress."""

    DECOMMISSIONING_STATUS_FAILURE: _DecommissioningStatus.ValueType  # 2
    """DECOMMISSIONING_STATUS_FAILURE indicates decommissioning failed."""

    DECOMMISSIONING_STATUS_SUCCESS: _DecommissioningStatus.ValueType  # 3
    """DECOMMISSIONING_STATUS_SUCCESS indicates decommissioning succeeded."""

class DecommissioningStatus(_DecommissioningStatus, metaclass=_DecommissioningStatusEnumTypeWrapper):
    """DecommissioningStatus defines the set of possible states in the decommissioning
    process for a device.
    """
    pass

DECOMMISSIONING_STATUS_UNSPECIFIED: DecommissioningStatus.ValueType  # 0
DECOMMISSIONING_STATUS_IN_PROGRESS: DecommissioningStatus.ValueType  # 1
"""DECOMMISSIONING_STATUS_IN_PROGRESS indicates decommissioning is in progress."""

DECOMMISSIONING_STATUS_FAILURE: DecommissioningStatus.ValueType  # 2
"""DECOMMISSIONING_STATUS_FAILURE indicates decommissioning failed."""

DECOMMISSIONING_STATUS_SUCCESS: DecommissioningStatus.ValueType  # 3
"""DECOMMISSIONING_STATUS_SUCCESS indicates decommissioning succeeded."""

global___DecommissioningStatus = DecommissioningStatus


class _ProvisioningStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ProvisioningStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProvisioningStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PROVISIONING_STATUS_UNSPECIFIED: _ProvisioningStatus.ValueType  # 0
    PROVISIONING_STATUS_IN_PROGRESS: _ProvisioningStatus.ValueType  # 1
    """PROVISIONING_STATUS_IN_PROGRESS indicates provisioning is in progress."""

    PROVISIONING_STATUS_FAILURE: _ProvisioningStatus.ValueType  # 2
    """PROVISIONING_STATUS_FAILURE indicates provisioning failed."""

    PROVISIONING_STATUS_SUCCESS: _ProvisioningStatus.ValueType  # 3
    """PROVISIONING_STATUS_SUCCESS indicates provisioning succeeded."""

class ProvisioningStatus(_ProvisioningStatus, metaclass=_ProvisioningStatusEnumTypeWrapper):
    """ProvisioningStatus defines the set of possible states in the provisioning
    process for a device.
    """
    pass

PROVISIONING_STATUS_UNSPECIFIED: ProvisioningStatus.ValueType  # 0
PROVISIONING_STATUS_IN_PROGRESS: ProvisioningStatus.ValueType  # 1
"""PROVISIONING_STATUS_IN_PROGRESS indicates provisioning is in progress."""

PROVISIONING_STATUS_FAILURE: ProvisioningStatus.ValueType  # 2
"""PROVISIONING_STATUS_FAILURE indicates provisioning failed."""

PROVISIONING_STATUS_SUCCESS: ProvisioningStatus.ValueType  # 3
"""PROVISIONING_STATUS_SUCCESS indicates provisioning succeeded."""

global___ProvisioningStatus = ProvisioningStatus


class ExtendedAttributes(google.protobuf.message.Message):
    """ExtendedAttributes wraps any additional, potentially non-standard, features
    or attributes the device reports.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class FeatureEnabledEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.bool
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FEATURE_ENABLED_FIELD_NUMBER: builtins.int
    @property
    def feature_enabled(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.bool]:
        """feature_enabled is a map of feature name to enabled status.
        If a feature is missing from this map it can be assumed off.
        """
        pass
    def __init__(self,
        *,
        feature_enabled: typing.Optional[typing.Mapping[typing.Text, builtins.bool]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feature_enabled",b"feature_enabled"]) -> None: ...
global___ExtendedAttributes = ExtendedAttributes

class DeviceKey(google.protobuf.message.Message):
    """DeviceKey uniquely identifies a single device."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICE_ID_FIELD_NUMBER: builtins.int
    @property
    def device_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """device_id is the unique identifier of the device."""
        pass
    def __init__(self,
        *,
        device_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_id",b"device_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_id",b"device_id"]) -> None: ...
global___DeviceKey = DeviceKey

class DeviceConfiguration(google.protobuf.message.Message):
    """DeviceConfiguration holds the device-specific configuration for a third-party
    device, as defined in https://github.com/aristanetworks/cloudvision-go.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class OptionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    OPTIONS_FIELD_NUMBER: builtins.int
    @property
    def options(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """options is a map from device option to value.

        E.g., for an SNMP device, this could be the following:

        "address":   "my_snmp_hostname",
        "community": "public"
        """
        pass
    def __init__(self,
        *,
        options: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["options",b"options"]) -> None: ...
global___DeviceConfiguration = DeviceConfiguration

class UUIDKey(google.protobuf.message.Message):
    """UUIDKey is a key that holds a UUID for an onboarding or decommissioning request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def request_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """request_id should be a UUID for the request."""
        pass
    def __init__(self,
        *,
        request_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id",b"request_id"]) -> None: ...
global___UUIDKey = UUIDKey

class DeviceOnboardingConfig(google.protobuf.message.Message):
    """DeviceOnboardingConfig describes a device onboarding request. "Onboarding"
    refers to the process of initiating device streaming to CloudVision and
    adding the streaming device to CloudVision's inventory.

    The request flow works as follows:

    1. Set on DeviceOnboardingConfig sends an onboarding request with a UUID
       that the user is responsible for generating.
    2. Once the server receives the request, it validates and records it.
    3. Then, the server processes it, initiating the onboarding procedure and
       tracking the status of the onboarding attempt.
    4. The user may do a GetOne or Subscribe on DeviceOnboarding using the same
       UUID to see the status of the request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    HOSTNAME_OR_IP_FIELD_NUMBER: builtins.int
    DEVICE_TYPE_FIELD_NUMBER: builtins.int
    DEVICE_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___UUIDKey:
        """key identifies the request to onboard the device at hostname_or_ip."""
        pass
    @property
    def hostname_or_ip(self) -> google.protobuf.wrappers_pb2.StringValue:
        """hostname_or_ip is a hostname or an IP at which the device can be reached."""
        pass
    @property
    def device_type(self) -> google.protobuf.wrappers_pb2.StringValue:
        """device_type describes the method by which to retrieve information for the
        device. The value should be "eos" for eos devices. For third-party devices,
        supported values are: "openconfig", "snmp", "cvp", "mwm", and "vCenter".
        """
        pass
    @property
    def device_config(self) -> global___DeviceConfiguration:
        """device_config is the configuration for a third-party device."""
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___UUIDKey] = ...,
        hostname_or_ip: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        device_type: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        device_config: typing.Optional[global___DeviceConfiguration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_config",b"device_config","device_type",b"device_type","hostname_or_ip",b"hostname_or_ip","key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_config",b"device_config","device_type",b"device_type","hostname_or_ip",b"hostname_or_ip","key",b"key"]) -> None: ...
global___DeviceOnboardingConfig = DeviceOnboardingConfig

class DeviceOnboarding(google.protobuf.message.Message):
    """DeviceOnboarding describes the status of an onboarding process."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    DEVICE_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___UUIDKey:
        """key identifies the request for which to retrieve an onboarding status."""
        pass
    @property
    def device_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """device_id is the unique device ID that is discovered via onboarding."""
        pass
    status: global___OnboardingStatus.ValueType
    """status describes the onboarding status of the device."""

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """error is the error that caused status to become ONBOARDING_STATUS_FAILURE."""
        pass
    @property
    def status_message(self) -> google.protobuf.wrappers_pb2.StringValue:
        """status_message contains information on the status of the onboarding attempt,
        if any. This is generally an unstructured log message that is for display
        purposes only (its structure and contents may change).
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___UUIDKey] = ...,
        device_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        status: global___OnboardingStatus.ValueType = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        status_message: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_id",b"device_id","error",b"error","key",b"key","status_message",b"status_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_id",b"device_id","error",b"error","key",b"key","status",b"status","status_message",b"status_message"]) -> None: ...
global___DeviceOnboarding = DeviceOnboarding

class DeviceDecommissioningConfig(google.protobuf.message.Message):
    """DeviceDecommissioningConfig describes a device decommissioning request.
    "Decommissioning" refers to the process of stopping device streaming to
    CloudVision and removing it from CloudVision's inventory.

    The request flow works as follows:

    1. Set on DeviceDecommissioningConfig sends a decommissioning request with
       a UUID that the user is responsible for generating.
    2. Once the server receives the request, it validates and records it.
    3. Then, the server processes it, initiating the decommissioning procedure
       and tracking the status of the decommissioning attempt.
    4. The user may do a GetOne or Subscribe on DeviceDecommissioning using the
       same UUID to see the status of the request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    DEVICE_ID_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___UUIDKey:
        """key identifies the request to decommission the device."""
        pass
    @property
    def device_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """device_id is the unique device ID that was discovered via onboarding."""
        pass
    @property
    def force(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """force is a flag that indicates if the decommission is to be forced.
        Normally, if there are pending or in-progress tasks associated with the device
        the decommission would fail. In case of a forced decommission, such blocking
        tasks would be ignored and decommissioning will be continued.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___UUIDKey] = ...,
        device_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        force: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_id",b"device_id","force",b"force","key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_id",b"device_id","force",b"force","key",b"key"]) -> None: ...
global___DeviceDecommissioningConfig = DeviceDecommissioningConfig

class DeviceDecommissioning(google.protobuf.message.Message):
    """DeviceOnboarding describes the status of a decommissioning process."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___UUIDKey:
        """key identifies the request for which to retrieve a decommissioning status."""
        pass
    status: global___DecommissioningStatus.ValueType
    """status describes the decommissioning status of the device."""

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """error is the error that caused status to become DECOMMISSIONING_STATUS_FAILURE."""
        pass
    @property
    def status_message(self) -> google.protobuf.wrappers_pb2.StringValue:
        """status_message contains information on the status of the decommissioning attempt,
        if any. This is generally an unstructured log message that is for display
        purposes only (its structure and contents may change).
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___UUIDKey] = ...,
        status: global___DecommissioningStatus.ValueType = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        status_message: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","status_message",b"status_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","status",b"status","status_message",b"status_message"]) -> None: ...
global___DeviceDecommissioning = DeviceDecommissioning

class Device(google.protobuf.message.Message):
    """Device describes an onboarded device."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    SOFTWARE_VERSION_FIELD_NUMBER: builtins.int
    MODEL_NAME_FIELD_NUMBER: builtins.int
    HARDWARE_REVISION_FIELD_NUMBER: builtins.int
    FQDN_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    SYSTEM_MAC_ADDRESS_FIELD_NUMBER: builtins.int
    BOOT_TIME_FIELD_NUMBER: builtins.int
    STREAMING_STATUS_FIELD_NUMBER: builtins.int
    EXTENDED_ATTRIBUTES_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___DeviceKey:
        """key uniquely identifies the device."""
        pass
    @property
    def software_version(self) -> google.protobuf.wrappers_pb2.StringValue:
        """software_version gives the currently running device software version."""
        pass
    @property
    def model_name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """model_name describes the hardware model of this device."""
        pass
    @property
    def hardware_revision(self) -> google.protobuf.wrappers_pb2.StringValue:
        """hardware_revision describes any revisional data to the model name."""
        pass
    @property
    def fqdn(self) -> google.protobuf.wrappers_pb2.StringValue:
        """fqdn gives the device's fully qualified domain name."""
        pass
    @property
    def hostname(self) -> google.protobuf.wrappers_pb2.StringValue:
        """hostname is the hostname as reported on the device."""
        pass
    @property
    def domain_name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """domain_name provides the domain name on which the device is registered."""
        pass
    @property
    def system_mac_address(self) -> google.protobuf.wrappers_pb2.StringValue:
        """system_mac_address provides the MAC address of the management port."""
        pass
    @property
    def boot_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """boot_time indicates when the device was last booted."""
        pass
    streaming_status: global___StreamingStatus.ValueType
    """streaming_status is the status of telemetry streaming for this device."""

    @property
    def extended_attributes(self) -> global___ExtendedAttributes:
        """extended_attributes wraps any additional, potentially non-standard, features
        or attributes that the device reports.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___DeviceKey] = ...,
        software_version: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        model_name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        hardware_revision: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        fqdn: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        hostname: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        domain_name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        system_mac_address: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        boot_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        streaming_status: global___StreamingStatus.ValueType = ...,
        extended_attributes: typing.Optional[global___ExtendedAttributes] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["boot_time",b"boot_time","domain_name",b"domain_name","extended_attributes",b"extended_attributes","fqdn",b"fqdn","hardware_revision",b"hardware_revision","hostname",b"hostname","key",b"key","model_name",b"model_name","software_version",b"software_version","system_mac_address",b"system_mac_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boot_time",b"boot_time","domain_name",b"domain_name","extended_attributes",b"extended_attributes","fqdn",b"fqdn","hardware_revision",b"hardware_revision","hostname",b"hostname","key",b"key","model_name",b"model_name","software_version",b"software_version","streaming_status",b"streaming_status","system_mac_address",b"system_mac_address"]) -> None: ...
global___Device = Device

class ProvisionedDevice(google.protobuf.message.Message):
    """ProvisionedDevice describes the provisioning status of an onboarded device
    if the onboarded device is configured for provisioning.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    ZTP_MODE_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    PROVISIONING_GROUP_NAME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___DeviceKey:
        """key uniquely identifies the device."""
        pass
    status: global___ProvisioningStatus.ValueType
    """status describes the onboarded device's provisioning status."""

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """error is the error that caused status to become PROVISIONING_STATUS_FAILURE."""
        pass
    @property
    def ztp_mode(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """ztp_mode indicates whether the device is in ZTP mode."""
        pass
    @property
    def ip_address(self) -> fmp.inet_pb2.IPAddress:
        """ip_address is the current (post-provisioning) IP address of the device."""
        pass
    @property
    def provisioning_group_name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """provisioning_group_name is the name of the group (also known as a container)
        to which the device belongs. Any provisioning operation performed on this
        group will also be performed on this device. If the device is not yet provisioned,
        this will not be set. Once it is provisioned, this will be set to "undefined_container"
        which indicates that the device does not yet belong to a group. At this point,
        a user may set it to an existing group.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___DeviceKey] = ...,
        status: global___ProvisioningStatus.ValueType = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ztp_mode: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ip_address: typing.Optional[fmp.inet_pb2.IPAddress] = ...,
        provisioning_group_name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","ip_address",b"ip_address","key",b"key","provisioning_group_name",b"provisioning_group_name","ztp_mode",b"ztp_mode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","ip_address",b"ip_address","key",b"key","provisioning_group_name",b"provisioning_group_name","status",b"status","ztp_mode",b"ztp_mode"]) -> None: ...
global___ProvisionedDevice = ProvisionedDevice
