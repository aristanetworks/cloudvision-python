"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CreatorType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CreatorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CreatorType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CREATOR_TYPE_UNSPECIFIED: _CreatorType.ValueType  # 0
    CREATOR_TYPE_SYSTEM: _CreatorType.ValueType  # 1
    """CREATOR_TYPE_SYSTEM is the type for something created by the system."""

    CREATOR_TYPE_USER: _CreatorType.ValueType  # 2
    """CREATOR_TYPE_USER is the type for something created by a user."""

class CreatorType(_CreatorType, metaclass=_CreatorTypeEnumTypeWrapper):
    """CreatorType specifies an entity that creates something."""
    pass

CREATOR_TYPE_UNSPECIFIED: CreatorType.ValueType  # 0
CREATOR_TYPE_SYSTEM: CreatorType.ValueType  # 1
"""CREATOR_TYPE_SYSTEM is the type for something created by the system."""

CREATOR_TYPE_USER: CreatorType.ValueType  # 2
"""CREATOR_TYPE_USER is the type for something created by a user."""

global___CreatorType = CreatorType


class TagKey(google.protobuf.message.Message):
    """TagKey uniquely identifies a tag for a network element."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LABEL_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def label(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Label is the label of the tag."""
        pass
    @property
    def value(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Value is the value of the tag."""
        pass
    def __init__(self,
        *,
        label: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        value: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["label",b"label","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["label",b"label","value",b"value"]) -> None: ...
global___TagKey = TagKey

class InterfaceTagConfig(google.protobuf.message.Message):
    """InterfaceTagConfig is a label-value pair that may or may
    not be assigned to an interface.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___TagKey:
        """Key uniquely identifies the interface tag."""
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___TagKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___InterfaceTagConfig = InterfaceTagConfig

class InterfaceTag(google.protobuf.message.Message):
    """InterfaceTag is a label-value pair that may or may
    not be assigned to an interface.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    CREATOR_TYPE_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___TagKey:
        """Key uniquely identifies the interface tag."""
        pass
    creator_type: global___CreatorType.ValueType
    """CreatorType is the creator type of the tag."""

    def __init__(self,
        *,
        key: typing.Optional[global___TagKey] = ...,
        creator_type: global___CreatorType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["creator_type",b"creator_type","key",b"key"]) -> None: ...
global___InterfaceTag = InterfaceTag

class InterfaceTagAssignmentKey(google.protobuf.message.Message):
    """InterfaceTagAssignmentKey uniquely identifies an interface
    tag assignment.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LABEL_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    DEVICE_ID_FIELD_NUMBER: builtins.int
    INTERFACE_ID_FIELD_NUMBER: builtins.int
    @property
    def label(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Label is the label of the tag."""
        pass
    @property
    def value(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Value is the value of the tag."""
        pass
    @property
    def device_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """DeviceId is the ID of the interface's device."""
        pass
    @property
    def interface_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """InterfaceId is the ID of the interface."""
        pass
    def __init__(self,
        *,
        label: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        value: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        device_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        interface_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_id",b"device_id","interface_id",b"interface_id","label",b"label","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_id",b"device_id","interface_id",b"interface_id","label",b"label","value",b"value"]) -> None: ...
global___InterfaceTagAssignmentKey = InterfaceTagAssignmentKey

class InterfaceTagAssignmentConfig(google.protobuf.message.Message):
    """InterfaceTagAssignmentConfig is the assignment of an interface tag
    to a specific interface.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___InterfaceTagAssignmentKey:
        """Key uniquely identifies the interface tag assignment."""
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___InterfaceTagAssignmentKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___InterfaceTagAssignmentConfig = InterfaceTagAssignmentConfig

class DeviceTagConfig(google.protobuf.message.Message):
    """DeviceTagConfig is a label-value pair that may or may not
    be assigned to a device.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___TagKey:
        """Key uniquely identifies the device tag."""
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___TagKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___DeviceTagConfig = DeviceTagConfig

class DeviceTag(google.protobuf.message.Message):
    """DeviceTag is a label-value pair that may or may not
    be assigned to a device.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    CREATOR_TYPE_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___TagKey:
        """Key uniquely identifies the device tag."""
        pass
    creator_type: global___CreatorType.ValueType
    """CreatorType is the creator type of the tag."""

    def __init__(self,
        *,
        key: typing.Optional[global___TagKey] = ...,
        creator_type: global___CreatorType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["creator_type",b"creator_type","key",b"key"]) -> None: ...
global___DeviceTag = DeviceTag

class DeviceTagAssignmentKey(google.protobuf.message.Message):
    """DeviceTagAssignmentKey uniquely identifies a device tag
    assignment.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LABEL_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    DEVICE_ID_FIELD_NUMBER: builtins.int
    @property
    def label(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Label is the label of the tag."""
        pass
    @property
    def value(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Value is the value of the tag."""
        pass
    @property
    def device_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """DeviceId is the ID of the device."""
        pass
    def __init__(self,
        *,
        label: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        value: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        device_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_id",b"device_id","label",b"label","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_id",b"device_id","label",b"label","value",b"value"]) -> None: ...
global___DeviceTagAssignmentKey = DeviceTagAssignmentKey

class DeviceTagAssignmentConfig(google.protobuf.message.Message):
    """DeviceTagAssignmentConfig is the assignment of a device tag to a
    specific device.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___DeviceTagAssignmentKey:
        """Key uniquely identifies the device tag assignment."""
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___DeviceTagAssignmentKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___DeviceTagAssignmentConfig = DeviceTagAssignmentConfig
