# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from arista.tag.v2.services import gen_pb2 as arista_dot_tag_dot_v2_dot_services_dot_gen__pb2


class TagServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagResponse.FromString,
                )
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
                )


class TagServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TagService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TagAssignmentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentResponse.FromString,
                )
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
                )


class TagAssignmentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagAssignmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagAssignmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TagAssignmentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagAssignmentService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagAssignmentService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagAssignmentService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TagAssignmentConfigServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentConfigService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigResponse.FromString,
                )
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
                )
        self.Set = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentConfigService/Set',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentConfigService/Delete',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteResponse.FromString,
                )


class TagAssignmentConfigServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagAssignmentConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagAssignmentConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TagAssignmentConfigService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagAssignmentConfigService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagAssignmentConfigService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagAssignmentConfigService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagAssignmentConfigService/Set',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagAssignmentConfigService/Delete',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TagConfigServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagConfigService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigResponse.FromString,
                )
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
                )
        self.Set = channel.unary_unary(
                '/arista.tag.v2.TagConfigService/Set',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/arista.tag.v2.TagConfigService/Delete',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteResponse.FromString,
                )


class TagConfigServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TagConfigService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagConfigService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagConfigService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/arista.tag.v2.TagConfigService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagConfigService/Set',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arista.tag.v2.TagConfigService/Delete',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
