"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import fmp.wrappers_pb2
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ProtocolBinding:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ProtocolBindingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProtocolBinding.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PROTOCOL_BINDING_UNSPECIFIED: _ProtocolBinding.ValueType  # 0
    """PROTOCOL_BINDING_UNSPECIFIED indicates that a protocol binding is unspecified."""

    PROTOCOL_BINDING_HTTP_POST: _ProtocolBinding.ValueType  # 1
    """PROTOCOL_BINDING_HTTP_POST indicates HTTP-POST SAML protocol binding."""

    PROTOCOL_BINDING_HTTP_REDIRECT: _ProtocolBinding.ValueType  # 2
    """PROTOCOL_BINDING_HTTP_REDIRECT indicates HTTP-Redirect SAML protocol binding."""

class ProtocolBinding(_ProtocolBinding, metaclass=_ProtocolBindingEnumTypeWrapper):
    """ProtocolBinding indicates SAML protocol binding to be used."""
    pass

PROTOCOL_BINDING_UNSPECIFIED: ProtocolBinding.ValueType  # 0
"""PROTOCOL_BINDING_UNSPECIFIED indicates that a protocol binding is unspecified."""

PROTOCOL_BINDING_HTTP_POST: ProtocolBinding.ValueType  # 1
"""PROTOCOL_BINDING_HTTP_POST indicates HTTP-POST SAML protocol binding."""

PROTOCOL_BINDING_HTTP_REDIRECT: ProtocolBinding.ValueType  # 2
"""PROTOCOL_BINDING_HTTP_REDIRECT indicates HTTP-Redirect SAML protocol binding."""

global___ProtocolBinding = ProtocolBinding


class OAuthKey(google.protobuf.message.Message):
    """OAuthKey contains OAuth provider ID."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROVIDER_ID_FIELD_NUMBER: builtins.int
    @property
    def provider_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """provider_id is the ID of the OAuth provider."""
        pass
    def __init__(self,
        *,
        provider_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["provider_id",b"provider_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["provider_id",b"provider_id"]) -> None: ...
global___OAuthKey = OAuthKey

class OAuthConfig(google.protobuf.message.Message):
    """OAuthConfig holds the configuration for an OAuth provider."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    CLIENT_ID_FIELD_NUMBER: builtins.int
    CLIENT_SECRET_FIELD_NUMBER: builtins.int
    ALGORITHMS_FIELD_NUMBER: builtins.int
    LINK_TO_SHARED_PROVIDER_FIELD_NUMBER: builtins.int
    JWKS_URI_FIELD_NUMBER: builtins.int
    PERMITTED_EMAIL_DOMAINS_FIELD_NUMBER: builtins.int
    ROLES_SCOPE_NAME_FIELD_NUMBER: builtins.int
    BEARER_TOKEN_INTROSPECTION_ENDPOINT_FIELD_NUMBER: builtins.int
    ROLES_CLAIM_NAME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___OAuthKey:
        """key is the ID of the OAuth provider."""
        pass
    @property
    def endpoint(self) -> google.protobuf.wrappers_pb2.StringValue:
        """endpoint is the URL that identifies an OAuth authorization server.
        This endpoint is used to interact with the provider. It must be a
        URI [RFC3986] with a scheme component that must be https, a host component,
        and optionally, port and path components, but no query or fragment components.
        """
        pass
    @property
    def client_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """client_id is the ID that the OAuth authorization server issues to the
        registered client.
        """
        pass
    @property
    def client_secret(self) -> google.protobuf.wrappers_pb2.StringValue:
        """client_secret is the secret that the OAuth authorization server issues
        to the registered client.
        """
        pass
    @property
    def algorithms(self) -> fmp.wrappers_pb2.RepeatedString:
        """algorithms is the set of signing algorithms. This is an optional field.
        If specified, only this set of algorithms may be used to sign the JWT.
        Otherwise, this defaults to the set of algorithms that the provider supports.
        """
        pass
    @property
    def link_to_shared_provider(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """link_to_shared_provider indicates whether or not use the provider as a shared
        provider. This is an optional field and set to false by default.
        """
        pass
    @property
    def jwks_uri(self) -> google.protobuf.wrappers_pb2.StringValue:
        """jwks_uri is where signing keys are downloaded. This is an optional field.
        Only needed if the default construction from endpoint would be incorrect.
        """
        pass
    @property
    def permitted_email_domains(self) -> fmp.wrappers_pb2.RepeatedString:
        """permitted_email_domains are domains of emails that users are allowed to use.
        This is an optional field. If not set, all domains are accepted by default.
        """
        pass
    @property
    def roles_scope_name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """roles_scope_name is the name for a scope tied to a claim that holds
        CloudVision roles in ID Token. CloudVision uses scope values to specify
        what access privileges are being requested for id token. CloudVision
        appends this value to `scope` query parameter in the authorization request URL.
        This is an optional field. If not set, CloudVision determines that
        mapping roles from the provider is disabled. If it's set, roles_claim_name
        also needs to be set.
        """
        pass
    @property
    def bearer_token_introspection_endpoint(self) -> google.protobuf.wrappers_pb2.StringValue:
        """bearer_token_introspection_endpoint is the provider instrospection endpoint used
        in Bearer Token based login support for CloudVision. This is an optional field.
        If specified, this endpoint will be used to verify bearer tokens generated via
        the provider to log in automated user accounts.
        """
        pass
    @property
    def roles_claim_name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """roles_claim_name is the name for a claim that holds CloudVision roles in ID Token.
        CloudVision uses this value to look up roles in the ID Token.
        This is an optional field. If not set, CloudVision determines that
        mapping roles from the provider is disabled. If it's set, roles_scope_name
        also needs to be set.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___OAuthKey] = ...,
        endpoint: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        client_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        client_secret: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        algorithms: typing.Optional[fmp.wrappers_pb2.RepeatedString] = ...,
        link_to_shared_provider: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        jwks_uri: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        permitted_email_domains: typing.Optional[fmp.wrappers_pb2.RepeatedString] = ...,
        roles_scope_name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        bearer_token_introspection_endpoint: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        roles_claim_name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["algorithms",b"algorithms","bearer_token_introspection_endpoint",b"bearer_token_introspection_endpoint","client_id",b"client_id","client_secret",b"client_secret","endpoint",b"endpoint","jwks_uri",b"jwks_uri","key",b"key","link_to_shared_provider",b"link_to_shared_provider","permitted_email_domains",b"permitted_email_domains","roles_claim_name",b"roles_claim_name","roles_scope_name",b"roles_scope_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithms",b"algorithms","bearer_token_introspection_endpoint",b"bearer_token_introspection_endpoint","client_id",b"client_id","client_secret",b"client_secret","endpoint",b"endpoint","jwks_uri",b"jwks_uri","key",b"key","link_to_shared_provider",b"link_to_shared_provider","permitted_email_domains",b"permitted_email_domains","roles_claim_name",b"roles_claim_name","roles_scope_name",b"roles_scope_name"]) -> None: ...
global___OAuthConfig = OAuthConfig

class SAMLKey(google.protobuf.message.Message):
    """SAMLKey contains SAML Provider ID."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROVIDER_ID_FIELD_NUMBER: builtins.int
    @property
    def provider_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """provider_id is the ID of the SAML provider."""
        pass
    def __init__(self,
        *,
        provider_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["provider_id",b"provider_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["provider_id",b"provider_id"]) -> None: ...
global___SAMLKey = SAMLKey

class SAMLConfig(google.protobuf.message.Message):
    """SAMLConfig holds the configuration for a SAML provider."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    IDP_ISSUER_FIELD_NUMBER: builtins.int
    IDP_METADATA_URL_FIELD_NUMBER: builtins.int
    AUTHREQ_BINDING_FIELD_NUMBER: builtins.int
    EMAIL_ATTRNAME_FIELD_NUMBER: builtins.int
    LINK_TO_SHARED_PROVIDER_FIELD_NUMBER: builtins.int
    PERMITTED_EMAIL_DOMAINS_FIELD_NUMBER: builtins.int
    FORCE_SAML_AUTHN_FIELD_NUMBER: builtins.int
    ROLES_ATTRNAME_FIELD_NUMBER: builtins.int
    ORG_ATTRNAME_FIELD_NUMBER: builtins.int
    USERNAME_ATTRNAME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___SAMLKey:
        """key is the ID of the SAML provider."""
        pass
    @property
    def idp_issuer(self) -> google.protobuf.wrappers_pb2.StringValue:
        """idp_issuer identifies the SAML provider. There is no restriction on its format
        other than a string to carry the issuer's name.
        """
        pass
    @property
    def idp_metadata_url(self) -> google.protobuf.wrappers_pb2.StringValue:
        """idp_metadata_url is the URL that CloudVision uses to fetch the
        SAML provider metadata.
        """
        pass
    authreq_binding: global___ProtocolBinding.ValueType
    """authreq_binding specifies the ProtocolBinding used to send SAML authentication
    request to the SAML provider.
    """

    @property
    def email_attrname(self) -> google.protobuf.wrappers_pb2.StringValue:
        """email_attrname specifies the Attribute name for email ID in Assertion of SAMLResponse
        from the SAML provider.
        """
        pass
    @property
    def link_to_shared_provider(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """link_to_shared_provider indicates whether or not use the provider as a shared
        provider. This is an optional field and set to false by default.
        """
        pass
    @property
    def permitted_email_domains(self) -> fmp.wrappers_pb2.RepeatedString:
        """permitted_email_domains are domains of emails that users are allowed to use.
        This is an optional field. If not set, all domains are accepted by default.
        """
        pass
    @property
    def force_saml_authn(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """force_saml_authn indicates wether or not enable force authentication in SAML login.
        This is an optional field. If not set, it defaults to false.
        """
        pass
    @property
    def roles_attrname(self) -> google.protobuf.wrappers_pb2.StringValue:
        """roles_attrname specifies the Attribute name for CloudVision roles in the Assertion
        of SAMLResponse. This is an optional field. If not set, CloudVision determines that
        mapping roles from the provider is disabled.
        """
        pass
    @property
    def org_attrname(self) -> google.protobuf.wrappers_pb2.StringValue:
        """org_attrname specifies the Attribute name for CloudVision organization/tenant in
        the Assertion of SAMLResponse. This is an optional field. CloudVision supports use
        of certain shared SAML Identity Providers for authenticating users across multiple
        CloudVision organizations/tenants. In case a given organization uses a shared provider,
        then, CloudVision needs this attribute to determine if the organization that
        the shared SAML Identity Provider is sending the assertion for is the same as the
        one the user requested to be logged into. For an existing user on CloudVision,
        the user's email is used to determine which organization the user belongs to do
        the same verification but in case a dynamic user creation is needed and the given
        user doesn't exist on CloudVision currently then the matching organization attribute
        from the shared Identity Privder becomes necessary. Dynamic user creation is
        disabled for a given organization using shared Identity Provider if this attribute
        is not specified.
        """
        pass
    @property
    def username_attrname(self) -> google.protobuf.wrappers_pb2.StringValue:
        """username_attrname specifies Attribute name for CloudVision users' username in the
        Assertion of SAMLResponse. This is an optional field as long as mapping roles from
        provider is not enabled. Once enabled, this field becomes mandatory.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___SAMLKey] = ...,
        idp_issuer: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        idp_metadata_url: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        authreq_binding: global___ProtocolBinding.ValueType = ...,
        email_attrname: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        link_to_shared_provider: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        permitted_email_domains: typing.Optional[fmp.wrappers_pb2.RepeatedString] = ...,
        force_saml_authn: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        roles_attrname: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        org_attrname: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        username_attrname: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["email_attrname",b"email_attrname","force_saml_authn",b"force_saml_authn","idp_issuer",b"idp_issuer","idp_metadata_url",b"idp_metadata_url","key",b"key","link_to_shared_provider",b"link_to_shared_provider","org_attrname",b"org_attrname","permitted_email_domains",b"permitted_email_domains","roles_attrname",b"roles_attrname","username_attrname",b"username_attrname"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authreq_binding",b"authreq_binding","email_attrname",b"email_attrname","force_saml_authn",b"force_saml_authn","idp_issuer",b"idp_issuer","idp_metadata_url",b"idp_metadata_url","key",b"key","link_to_shared_provider",b"link_to_shared_provider","org_attrname",b"org_attrname","permitted_email_domains",b"permitted_email_domains","roles_attrname",b"roles_attrname","username_attrname",b"username_attrname"]) -> None: ...
global___SAMLConfig = SAMLConfig
