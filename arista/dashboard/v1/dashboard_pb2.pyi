"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import fmp.wrappers_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Position(google.protobuf.message.Message):
    """Position represents a cell position in the UI."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    @property
    def x(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """x represents a position in the horizontal axis."""
        pass
    @property
    def y(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """y represents a position in the vertical axis."""
        pass
    def __init__(self,
        *,
        x: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        y: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y"]) -> None: ...
global___Position = Position

class Dimensions(google.protobuf.message.Message):
    """Dimensions represents the dimensions in cells of the widgets in the UI."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    @property
    def width(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """width of the widget in the UI, represented in number of cells."""
        pass
    @property
    def height(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """height of the widget in the UI, represented in number of cells."""
        pass
    def __init__(self,
        *,
        width: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        height: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["height",b"height","width",b"width"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["height",b"height","width",b"width"]) -> None: ...
global___Dimensions = Dimensions

class WidgetStyles(google.protobuf.message.Message):
    """WidgetStyles represents the widget's panel appearance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HIDE_TITLE_FIELD_NUMBER: builtins.int
    BACKGROUND_COLOR_FIELD_NUMBER: builtins.int
    HIDE_HORIZONTAL_BAR_FIELD_NUMBER: builtins.int
    TITLE_SIZE_FIELD_NUMBER: builtins.int
    @property
    def hide_title(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """hide_title is used to hint the dashboard that the widget title must be hidden."""
        pass
    @property
    def background_color(self) -> google.protobuf.wrappers_pb2.StringValue:
        """background_color is used to set the widget's background color."""
        pass
    @property
    def hide_horizontal_bar(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """hide_horizontal_bar is used to hint the dashboard that the title separator must be hidden."""
        pass
    @property
    def title_size(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """title_size is used to set widget's title size."""
        pass
    def __init__(self,
        *,
        hide_title: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        background_color: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        hide_horizontal_bar: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        title_size: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["background_color",b"background_color","hide_horizontal_bar",b"hide_horizontal_bar","hide_title",b"hide_title","title_size",b"title_size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["background_color",b"background_color","hide_horizontal_bar",b"hide_horizontal_bar","hide_title",b"hide_title","title_size",b"title_size"]) -> None: ...
global___WidgetStyles = WidgetStyles

class Widget(google.protobuf.message.Message):
    """Widget is used to create a dashboard.
    Each widget is responsible to display some type of data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    STYLES_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """id holds the unique identifier for the widget inside a dashboard"""
        pass
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name of the widget is displayed at the top of the widget."""
        pass
    @property
    def position(self) -> global___Position:
        """position of the widget, represented as a (x,y) coordinate in a grid.
        Top left is at (0,0).
        """
        pass
    @property
    def dimensions(self) -> global___Dimensions:
        """dimensions of the widget represents how many cell in the grid it takes."""
        pass
    @property
    def type(self) -> google.protobuf.wrappers_pb2.StringValue:
        """type is the widget type. Each type is handled differently in the UI,
        and can use different `inputs`.
        """
        pass
    @property
    def inputs(self) -> google.protobuf.wrappers_pb2.StringValue:
        """inputs contains metadata about the data the widget will display, encoded in a JSON string.
        Internal data vary based on the widget type `type` and is managed by the client.
        """
        pass
    @property
    def location(self) -> google.protobuf.wrappers_pb2.StringValue:
        """location is used as a position display hint, used and managed by the UI."""
        pass
    @property
    def styles(self) -> global___WidgetStyles:
        """styles represents the widget's panel appearance."""
        pass
    @property
    def parent(self) -> google.protobuf.wrappers_pb2.StringValue:
        """parent stores the id of its parent widget."""
        pass
    def __init__(self,
        *,
        id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        position: typing.Optional[global___Position] = ...,
        dimensions: typing.Optional[global___Dimensions] = ...,
        type: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        inputs: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        location: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        styles: typing.Optional[global___WidgetStyles] = ...,
        parent: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","id",b"id","inputs",b"inputs","location",b"location","name",b"name","parent",b"parent","position",b"position","styles",b"styles","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","id",b"id","inputs",b"inputs","location",b"location","name",b"name","parent",b"parent","position",b"position","styles",b"styles","type",b"type"]) -> None: ...
global___Widget = Widget

class Widgets(google.protobuf.message.Message):
    """Widgets holds a list of `Widget`s."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Widget]:
        """values holds a list of widgets"""
        pass
    def __init__(self,
        *,
        values: typing.Optional[typing.Iterable[global___Widget]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___Widgets = Widgets

class DashboardKey(google.protobuf.message.Message):
    """DashboardKey represents the dashboard unique identifier."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DASHBOARD_ID_FIELD_NUMBER: builtins.int
    @property
    def dashboard_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """dashboard_id holds the id of the dashboard"""
        pass
    def __init__(self,
        *,
        dashboard_id: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard_id",b"dashboard_id"]) -> None: ...
global___DashboardKey = DashboardKey

class DashboardConfig(google.protobuf.message.Message):
    """DashboardConfig includes all user-editable dashboard fields."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    WIDGETS_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___DashboardKey:
        """key is the unique identifier. It always must be defined.
        If set, will create or update a dashboard.
        """
        pass
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name is the dashboard name, displayed at the top of the dashboard."""
        pass
    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description may include details about what is displayed in the dashboard."""
        pass
    @property
    def widgets(self) -> global___Widgets:
        """widgets list of widgets in the dashboard."""
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___DashboardKey] = ...,
        name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        description: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        widgets: typing.Optional[global___Widgets] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["description",b"description","key",b"key","name",b"name","widgets",b"widgets"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","key",b"key","name",b"name","widgets",b"widgets"]) -> None: ...
global___DashboardConfig = DashboardConfig

class DashboardMetadata(google.protobuf.message.Message):
    """DashboardMetadata includes versioning metadata. All the data here is managed internally, and
    is read-only.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SCHEMA_VERSION_FIELD_NUMBER: builtins.int
    LEGACY_KEY_FIELD_NUMBER: builtins.int
    LEGACY_VERSION_FIELD_NUMBER: builtins.int
    FROM_PACKAGE_FIELD_NUMBER: builtins.int
    @property
    def schema_version(self) -> google.protobuf.wrappers_pb2.StringValue:
        """schema_version is managed internally."""
        pass
    @property
    def legacy_key(self) -> google.protobuf.wrappers_pb2.StringValue:
        """legacy_key holds the key of a previous version of the dashboard, in case it was migrated."""
        pass
    @property
    def legacy_version(self) -> google.protobuf.wrappers_pb2.StringValue:
        """legacy_version tells from which version the dashboard was migrated from."""
        pass
    @property
    def from_package(self) -> google.protobuf.wrappers_pb2.StringValue:
        """from_package records the contributing package key and version, if applicable."""
        pass
    def __init__(self,
        *,
        schema_version: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        legacy_key: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        legacy_version: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        from_package: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["from_package",b"from_package","legacy_key",b"legacy_key","legacy_version",b"legacy_version","schema_version",b"schema_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["from_package",b"from_package","legacy_key",b"legacy_key","legacy_version",b"legacy_version","schema_version",b"schema_version"]) -> None: ...
global___DashboardMetadata = DashboardMetadata

class Filter(google.protobuf.message.Message):
    """Filter is used to filter dashboards for non exact match cases."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> fmp.wrappers_pb2.RepeatedString:
        """tags includes the values to be matched in the dashboard description.
        Tags are matched by word. Generally, a tag is prefixed by a '#',
        which must be omitted when provided here.
        All provided tags must match inside a dashboard for it to be returned.
        E.g., to match "#devices", the tag should be set to "devices".
        """
        pass
    def __init__(self,
        *,
        tags: typing.Optional[fmp.wrappers_pb2.RepeatedString] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tags",b"tags"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tags",b"tags"]) -> None: ...
global___Filter = Filter

class Dashboard(google.protobuf.message.Message):
    """Dashboard state contains all dashboard data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_AT_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_BY_FIELD_NUMBER: builtins.int
    META_DATA_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    WIDGETS_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___DashboardKey:
        """key is the unique identifier. It will always be defined."""
        pass
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """created_at represents the date the dashboard was first created.
        Old dashboards may not have this field set.
        """
        pass
    @property
    def created_by(self) -> google.protobuf.wrappers_pb2.StringValue:
        """created_by keeps the name of the user who first created this dashboard.
        Old dashboards may not have this field set.
        """
        pass
    @property
    def last_modified_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """last_modified_at holds the timestamp this dashboard was last updated by an user.
        Old dashboards may not have this field set.
        """
        pass
    @property
    def last_modified_by(self) -> google.protobuf.wrappers_pb2.StringValue:
        """last_modified_by holds the username who last updated this dashboard.
        Old dashboards may not have this field set.
        """
        pass
    @property
    def meta_data(self) -> global___DashboardMetadata:
        """meta_data includes version metadata about the dashboard."""
        pass
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name is the dashboard name, displayed at the top of the dashboard."""
        pass
    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description may include details about what is displayed in the dashboard."""
        pass
    @property
    def widgets(self) -> global___Widgets:
        """widgets list of widgets in the dashboard."""
        pass
    def __init__(self,
        *,
        key: typing.Optional[global___DashboardKey] = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        created_by: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        last_modified_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_modified_by: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        meta_data: typing.Optional[global___DashboardMetadata] = ...,
        name: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        description: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        widgets: typing.Optional[global___Widgets] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at",b"created_at","created_by",b"created_by","description",b"description","key",b"key","last_modified_at",b"last_modified_at","last_modified_by",b"last_modified_by","meta_data",b"meta_data","name",b"name","widgets",b"widgets"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_at",b"created_at","created_by",b"created_by","description",b"description","key",b"key","last_modified_at",b"last_modified_at","last_modified_by",b"last_modified_by","meta_data",b"meta_data","name",b"name","widgets",b"widgets"]) -> None: ...
global___Dashboard = Dashboard

class GlobalDashboardConfig(google.protobuf.message.Message):
    """GlobalDashboardConfig holds global configs related to Dashboards."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEFAULT_DASHBOARD_FIELD_NUMBER: builtins.int
    @property
    def default_dashboard(self) -> global___DashboardKey:
        """default_dashboard is the default dashboard shown to a user.
        To unset, use an empty key (`{dashboard_id: nil}`) in a `Set()` call.
        """
        pass
    def __init__(self,
        *,
        default_dashboard: typing.Optional[global___DashboardKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_dashboard",b"default_dashboard"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_dashboard",b"default_dashboard"]) -> None: ...
global___GlobalDashboardConfig = GlobalDashboardConfig
