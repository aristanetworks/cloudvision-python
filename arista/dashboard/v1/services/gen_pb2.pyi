"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import arista.dashboard.v1.dashboard_pb2
import arista.subscriptions.subscriptions_pb2
import arista.time.time_pb2
import builtins
import fmp.deletes_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class MetaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of the last item included in the metadata calculation."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    @property
    def count(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """Count is the number of items present under the conditions of the request."""
        pass
    def __init__(self,
        *,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        count: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["count",b"count","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["count",b"count","time",b"time","type",b"type"]) -> None: ...
global___MetaResponse = MetaResponse

class DashboardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.dashboard.v1.dashboard_pb2.DashboardKey:
        """Key uniquely identifies a Dashboard instance to retrieve.
        This value must be populated.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___DashboardRequest = DashboardRequest

class DashboardResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.Dashboard:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        Dashboard instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.Dashboard] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___DashboardResponse = DashboardResponse

class DashboardSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.DashboardKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.DashboardKey]] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","time",b"time"]) -> None: ...
global___DashboardSomeRequest = DashboardSomeRequest

class DashboardSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.Dashboard:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.Dashboard] = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> None: ...
global___DashboardSomeResponse = DashboardSomeResponse

class DashboardStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.Dashboard]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """
        pass
    @property
    def filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.Filter]:
        """For each Dashboard in the list, all populated fields are considered ANDed together
        as a filtering operation. Similarly, the list itself is ORed such that any individual
        filter that matches a given Dashboard is streamed to the user.
        """
        pass
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each Dashboard at end.
            * Each Dashboard response is fully-specified (all fields set).
          * start: Returns the state of each Dashboard at start, followed by updates until now.
            * Each Dashboard response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each Dashboard at start, followed by updates
            until end.
            * Each Dashboard response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.Dashboard]] = ...,
        filter: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.Filter]] = ...,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","partial_eq_filter",b"partial_eq_filter","time",b"time"]) -> None: ...
global___DashboardStreamRequest = DashboardStreamRequest

class DashboardStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.Dashboard:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this Dashboard's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the Dashboard value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.Dashboard] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___DashboardStreamResponse = DashboardStreamResponse

class DashboardConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.dashboard.v1.dashboard_pb2.DashboardKey:
        """Key uniquely identifies a DashboardConfig instance to retrieve.
        This value must be populated.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___DashboardConfigRequest = DashboardConfigRequest

class DashboardConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.DashboardConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        DashboardConfig instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___DashboardConfigResponse = DashboardConfigResponse

class DashboardConfigSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.DashboardKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.DashboardKey]] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","time",b"time"]) -> None: ...
global___DashboardConfigSomeRequest = DashboardConfigSomeRequest

class DashboardConfigSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.DashboardConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardConfig] = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> None: ...
global___DashboardConfigSomeResponse = DashboardConfigSomeResponse

class DashboardConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.DashboardConfig]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """
        pass
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each DashboardConfig at end.
            * Each DashboardConfig response is fully-specified (all fields set).
          * start: Returns the state of each DashboardConfig at start, followed by updates until now.
            * Each DashboardConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each DashboardConfig at start, followed by updates
            until end.
            * Each DashboardConfig response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.DashboardConfig]] = ...,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_eq_filter",b"partial_eq_filter","time",b"time"]) -> None: ...
global___DashboardConfigStreamRequest = DashboardConfigStreamRequest

class DashboardConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.DashboardConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this DashboardConfig's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the DashboardConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___DashboardConfigStreamResponse = DashboardConfigStreamResponse

class DashboardConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.DashboardConfig:
        """DashboardConfig carries the value to set into the datastore.
        See the documentation on the DashboardConfig struct for which fields are required.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___DashboardConfigSetRequest = DashboardConfigSetRequest

class DashboardConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.DashboardConfig:
        """Value carries all the values given in the DashboardConfigSetRequest as well
        as any server-generated values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___DashboardConfigSetResponse = DashboardConfigSetResponse

class DashboardConfigSetSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.DashboardConfig]:
        """value contains a list of DashboardConfig values to write.
        It is possible to provide more values than can fit within either:
            - the maxiumum send size of the client
            - the maximum receive size of the server
        If this error occurs you must reduce the number of values sent.
        See gRPC "maximum message size" documentation for more information.
        """
        pass
    def __init__(self,
        *,
        values: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.DashboardConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___DashboardConfigSetSomeRequest = DashboardConfigSetSomeRequest

class DashboardConfigSetSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.dashboard.v1.dashboard_pb2.DashboardKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___DashboardConfigSetSomeResponse = DashboardConfigSetSomeResponse

class DashboardConfigDeleteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.dashboard.v1.dashboard_pb2.DashboardKey:
        """Key indicates which DashboardConfig instance to remove.
        This field must always be set.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___DashboardConfigDeleteRequest = DashboardConfigDeleteRequest

class DashboardConfigDeleteResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.dashboard.v1.dashboard_pb2.DashboardKey:
        """Key echoes back the key of the deleted DashboardConfig instance."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        deletion. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==DeletedAt will not include this instance.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___DashboardConfigDeleteResponse = DashboardConfigDeleteResponse

class DashboardConfigDeleteSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.DashboardKey]:
        """key contains a list of DashboardConfig keys to delete"""
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.DashboardKey]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys"]) -> None: ...
global___DashboardConfigDeleteSomeRequest = DashboardConfigDeleteSomeRequest

class DashboardConfigDeleteSomeResponse(google.protobuf.message.Message):
    """DashboardConfigDeleteSomeResponse is only sent when there is an error."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.dashboard.v1.dashboard_pb2.DashboardKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___DashboardConfigDeleteSomeResponse = DashboardConfigDeleteSomeResponse

class DashboardConfigDeleteAllRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.DashboardConfig]:
        """PartialEqFilter provides a way to server-side filter a DeleteAll.
        This requires all provided fields to be equal to the response.
        A filtered DeleteAll will use GetAll with filter to find things to delete.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.DashboardConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_eq_filter",b"partial_eq_filter"]) -> None: ...
global___DashboardConfigDeleteAllRequest = DashboardConfigDeleteAllRequest

class DashboardConfigDeleteAllResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    type: fmp.deletes_pb2.DeleteError.ValueType
    """This describes the class of delete error.
    A DeleteAllResponse is only sent when there is an error.
    """

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """This indicates the error message from the delete failure."""
        pass
    @property
    def key(self) -> arista.dashboard.v1.dashboard_pb2.DashboardKey:
        """This is the key of the DashboardConfig instance that failed to be deleted."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp when the key was being deleted."""
        pass
    def __init__(self,
        *,
        type: fmp.deletes_pb2.DeleteError.ValueType = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        key: typing.Optional[arista.dashboard.v1.dashboard_pb2.DashboardKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time","type",b"type"]) -> None: ...
global___DashboardConfigDeleteAllResponse = DashboardConfigDeleteAllResponse

class GlobalDashboardConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time"]) -> None: ...
global___GlobalDashboardConfigRequest = GlobalDashboardConfigRequest

class GlobalDashboardConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        GlobalDashboardConfig instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___GlobalDashboardConfigResponse = GlobalDashboardConfigResponse

class GlobalDashboardConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """
        pass
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each GlobalDashboardConfig at end.
            * Each GlobalDashboardConfig response is fully-specified (all fields set).
          * start: Returns the state of each GlobalDashboardConfig at start, followed by updates until now.
            * Each GlobalDashboardConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each GlobalDashboardConfig at start, followed by updates
            until end.
            * Each GlobalDashboardConfig response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig]] = ...,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_eq_filter",b"partial_eq_filter","time",b"time"]) -> None: ...
global___GlobalDashboardConfigStreamRequest = GlobalDashboardConfigStreamRequest

class GlobalDashboardConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this GlobalDashboardConfig's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the GlobalDashboardConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___GlobalDashboardConfigStreamResponse = GlobalDashboardConfigStreamResponse

class GlobalDashboardConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig:
        """GlobalDashboardConfig carries the value to set into the datastore.
        See the documentation on the GlobalDashboardConfig struct for which fields are required.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___GlobalDashboardConfigSetRequest = GlobalDashboardConfigSetRequest

class GlobalDashboardConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig:
        """Value carries all the values given in the GlobalDashboardConfigSetRequest as well
        as any server-generated values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.dashboard.v1.dashboard_pb2.GlobalDashboardConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___GlobalDashboardConfigSetResponse = GlobalDashboardConfigSetResponse
