"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import arista.changecontrol.v1.changecontrol_pb2
import arista.subscriptions.subscriptions_pb2
import arista.time.time_pb2
import builtins
import fmp.deletes_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class MetaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of the last item included in the metadata calculation."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    @property
    def count(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """Count is the number of items present under the conditions of the request."""
        pass
    def __init__(self,
        *,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        count: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["count",b"count","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["count",b"count","time",b"time","type",b"type"]) -> None: ...
global___MetaResponse = MetaResponse

class ApproveConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """Key uniquely identifies a ApproveConfig instance to retrieve.
        This value must be populated.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___ApproveConfigRequest = ApproveConfigRequest

class ApproveConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ApproveConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        ApproveConfig instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___ApproveConfigResponse = ApproveConfigResponse

class ApproveConfigSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","time",b"time"]) -> None: ...
global___ApproveConfigSomeRequest = ApproveConfigSomeRequest

class ApproveConfigSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ApproveConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig] = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> None: ...
global___ApproveConfigSomeResponse = ApproveConfigSomeResponse

class ApproveConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """
        pass
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each ApproveConfig at end.
            * Each ApproveConfig response is fully-specified (all fields set).
          * start: Returns the state of each ApproveConfig at start, followed by updates until now.
            * Each ApproveConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each ApproveConfig at start, followed by updates
            until end.
            * Each ApproveConfig response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig]] = ...,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_eq_filter",b"partial_eq_filter","time",b"time"]) -> None: ...
global___ApproveConfigStreamRequest = ApproveConfigStreamRequest

class ApproveConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ApproveConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this ApproveConfig's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the ApproveConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___ApproveConfigStreamResponse = ApproveConfigStreamResponse

class ApproveConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ApproveConfig:
        """ApproveConfig carries the value to set into the datastore.
        See the documentation on the ApproveConfig struct for which fields are required.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___ApproveConfigSetRequest = ApproveConfigSetRequest

class ApproveConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ApproveConfig:
        """Value carries all the values given in the ApproveConfigSetRequest as well
        as any server-generated values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___ApproveConfigSetResponse = ApproveConfigSetResponse

class ApproveConfigSetSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig]:
        """value contains a list of ApproveConfig values to write.
        It is possible to provide more values than can fit within either:
            - the maxiumum send size of the client
            - the maximum receive size of the server
        If this error occurs you must reduce the number of values sent.
        See gRPC "maximum message size" documentation for more information.
        """
        pass
    def __init__(self,
        *,
        values: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___ApproveConfigSetSomeRequest = ApproveConfigSetSomeRequest

class ApproveConfigSetSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___ApproveConfigSetSomeResponse = ApproveConfigSetSomeResponse

class ApproveConfigDeleteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """Key indicates which ApproveConfig instance to remove.
        This field must always be set.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___ApproveConfigDeleteRequest = ApproveConfigDeleteRequest

class ApproveConfigDeleteResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """Key echoes back the key of the deleted ApproveConfig instance."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        deletion. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==DeletedAt will not include this instance.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___ApproveConfigDeleteResponse = ApproveConfigDeleteResponse

class ApproveConfigDeleteSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]:
        """key contains a list of ApproveConfig keys to delete"""
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys"]) -> None: ...
global___ApproveConfigDeleteSomeRequest = ApproveConfigDeleteSomeRequest

class ApproveConfigDeleteSomeResponse(google.protobuf.message.Message):
    """ApproveConfigDeleteSomeResponse is only sent when there is an error."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___ApproveConfigDeleteSomeResponse = ApproveConfigDeleteSomeResponse

class ApproveConfigDeleteAllRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig]:
        """PartialEqFilter provides a way to server-side filter a DeleteAll.
        This requires all provided fields to be equal to the response.
        A filtered DeleteAll will use GetAll with filter to find things to delete.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ApproveConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_eq_filter",b"partial_eq_filter"]) -> None: ...
global___ApproveConfigDeleteAllRequest = ApproveConfigDeleteAllRequest

class ApproveConfigDeleteAllResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    type: fmp.deletes_pb2.DeleteError.ValueType
    """This describes the class of delete error.
    A DeleteAllResponse is only sent when there is an error.
    """

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """This indicates the error message from the delete failure."""
        pass
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """This is the key of the ApproveConfig instance that failed to be deleted."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp when the key was being deleted."""
        pass
    def __init__(self,
        *,
        type: fmp.deletes_pb2.DeleteError.ValueType = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time","type",b"type"]) -> None: ...
global___ApproveConfigDeleteAllResponse = ApproveConfigDeleteAllResponse

class ChangeControlRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """Key uniquely identifies a ChangeControl instance to retrieve.
        This value must be populated.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___ChangeControlRequest = ChangeControlRequest

class ChangeControlResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControl:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        ChangeControl instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControl] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___ChangeControlResponse = ChangeControlResponse

class ChangeControlSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","time",b"time"]) -> None: ...
global___ChangeControlSomeRequest = ChangeControlSomeRequest

class ChangeControlSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControl:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControl] = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> None: ...
global___ChangeControlSomeResponse = ChangeControlSomeResponse

class ChangeControlStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControl]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """
        pass
    @property
    def filter(self) -> arista.changecontrol.v1.changecontrol_pb2.Filter:
        """For each ChangeControl in the list, all populated fields are considered ANDed together
        as a filtering operation. Similarly, the list itself is ORed such that any individual
        filter that matches a given ChangeControl is streamed to the user.
        """
        pass
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each ChangeControl at end.
            * Each ChangeControl response is fully-specified (all fields set).
          * start: Returns the state of each ChangeControl at start, followed by updates until now.
            * Each ChangeControl response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each ChangeControl at start, followed by updates
            until end.
            * Each ChangeControl response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControl]] = ...,
        filter: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.Filter] = ...,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["filter",b"filter","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","partial_eq_filter",b"partial_eq_filter","time",b"time"]) -> None: ...
global___ChangeControlStreamRequest = ChangeControlStreamRequest

class ChangeControlStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControl:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this ChangeControl's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the ChangeControl value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControl] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___ChangeControlStreamResponse = ChangeControlStreamResponse

class ChangeControlConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """Key uniquely identifies a ChangeControlConfig instance to retrieve.
        This value must be populated.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___ChangeControlConfigRequest = ChangeControlConfigRequest

class ChangeControlConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        ChangeControlConfig instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___ChangeControlConfigResponse = ChangeControlConfigResponse

class ChangeControlConfigSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","time",b"time"]) -> None: ...
global___ChangeControlConfigSomeRequest = ChangeControlConfigSomeRequest

class ChangeControlConfigSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig] = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> None: ...
global___ChangeControlConfigSomeResponse = ChangeControlConfigSomeResponse

class ChangeControlConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """
        pass
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each ChangeControlConfig at end.
            * Each ChangeControlConfig response is fully-specified (all fields set).
          * start: Returns the state of each ChangeControlConfig at start, followed by updates until now.
            * Each ChangeControlConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each ChangeControlConfig at start, followed by updates
            until end.
            * Each ChangeControlConfig response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig]] = ...,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_eq_filter",b"partial_eq_filter","time",b"time"]) -> None: ...
global___ChangeControlConfigStreamRequest = ChangeControlConfigStreamRequest

class ChangeControlConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this ChangeControlConfig's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the ChangeControlConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___ChangeControlConfigStreamResponse = ChangeControlConfigStreamResponse

class ChangeControlConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig:
        """ChangeControlConfig carries the value to set into the datastore.
        See the documentation on the ChangeControlConfig struct for which fields are required.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___ChangeControlConfigSetRequest = ChangeControlConfigSetRequest

class ChangeControlConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig:
        """Value carries all the values given in the ChangeControlConfigSetRequest as well
        as any server-generated values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___ChangeControlConfigSetResponse = ChangeControlConfigSetResponse

class ChangeControlConfigSetSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig]:
        """value contains a list of ChangeControlConfig values to write.
        It is possible to provide more values than can fit within either:
            - the maxiumum send size of the client
            - the maximum receive size of the server
        If this error occurs you must reduce the number of values sent.
        See gRPC "maximum message size" documentation for more information.
        """
        pass
    def __init__(self,
        *,
        values: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___ChangeControlConfigSetSomeRequest = ChangeControlConfigSetSomeRequest

class ChangeControlConfigSetSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___ChangeControlConfigSetSomeResponse = ChangeControlConfigSetSomeResponse

class ChangeControlConfigDeleteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """Key indicates which ChangeControlConfig instance to remove.
        This field must always be set.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___ChangeControlConfigDeleteRequest = ChangeControlConfigDeleteRequest

class ChangeControlConfigDeleteResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """Key echoes back the key of the deleted ChangeControlConfig instance."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        deletion. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==DeletedAt will not include this instance.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___ChangeControlConfigDeleteResponse = ChangeControlConfigDeleteResponse

class ChangeControlConfigDeleteSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]:
        """key contains a list of ChangeControlConfig keys to delete"""
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys"]) -> None: ...
global___ChangeControlConfigDeleteSomeRequest = ChangeControlConfigDeleteSomeRequest

class ChangeControlConfigDeleteSomeResponse(google.protobuf.message.Message):
    """ChangeControlConfigDeleteSomeResponse is only sent when there is an error."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___ChangeControlConfigDeleteSomeResponse = ChangeControlConfigDeleteSomeResponse

class ChangeControlConfigDeleteAllRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig]:
        """PartialEqFilter provides a way to server-side filter a DeleteAll.
        This requires all provided fields to be equal to the response.
        A filtered DeleteAll will use GetAll with filter to find things to delete.
        """
        pass
    def __init__(self,
        *,
        partial_eq_filter: typing.Optional[typing.Iterable[arista.changecontrol.v1.changecontrol_pb2.ChangeControlConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_eq_filter",b"partial_eq_filter"]) -> None: ...
global___ChangeControlConfigDeleteAllRequest = ChangeControlConfigDeleteAllRequest

class ChangeControlConfigDeleteAllResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    type: fmp.deletes_pb2.DeleteError.ValueType
    """This describes the class of delete error.
    A DeleteAllResponse is only sent when there is an error.
    """

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """This indicates the error message from the delete failure."""
        pass
    @property
    def key(self) -> arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey:
        """This is the key of the ChangeControlConfig instance that failed to be deleted."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp when the key was being deleted."""
        pass
    def __init__(self,
        *,
        type: fmp.deletes_pb2.DeleteError.ValueType = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        key: typing.Optional[arista.changecontrol.v1.changecontrol_pb2.ChangeControlKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time","type",b"type"]) -> None: ...
global___ChangeControlConfigDeleteAllResponse = ChangeControlConfigDeleteAllResponse
