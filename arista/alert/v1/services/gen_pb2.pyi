"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import arista.alert.v1.alert_pb2
import arista.subscriptions.subscriptions_pb2
import arista.time.time_pb2
import builtins
import fmp.deletes_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class MetaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of the last item included in the metadata calculation."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    @property
    def count(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """Count is the number of items present under the conditions of the request."""
        pass
    def __init__(self,
        *,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        count: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["count",b"count","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["count",b"count","time",b"time","type",b"type"]) -> None: ...
global___MetaResponse = MetaResponse

class AlertRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time"]) -> None: ...
global___AlertRequest = AlertRequest

class AlertResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.Alert:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        Alert instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.Alert] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___AlertResponse = AlertResponse

class AlertStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each Alert at end.
            * Each Alert response is fully-specified (all fields set).
          * start: Returns the state of each Alert at start, followed by updates until now.
            * Each Alert response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each Alert at start, followed by updates
            until end.
            * Each Alert response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time"]) -> None: ...
global___AlertStreamRequest = AlertStreamRequest

class AlertStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.Alert:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this Alert's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the Alert value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.Alert] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___AlertStreamResponse = AlertStreamResponse

class AlertConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time"]) -> None: ...
global___AlertConfigRequest = AlertConfigRequest

class AlertConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        AlertConfig instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.AlertConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___AlertConfigResponse = AlertConfigResponse

class AlertConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each AlertConfig at end.
            * Each AlertConfig response is fully-specified (all fields set).
          * start: Returns the state of each AlertConfig at start, followed by updates until now.
            * Each AlertConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each AlertConfig at start, followed by updates
            until end.
            * Each AlertConfig response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time"]) -> None: ...
global___AlertConfigStreamRequest = AlertConfigStreamRequest

class AlertConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this AlertConfig's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the AlertConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.AlertConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___AlertConfigStreamResponse = AlertConfigStreamResponse

class AlertConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """AlertConfig carries the value to set into the datastore.
        See the documentation on the AlertConfig struct for which fields are required.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.AlertConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___AlertConfigSetRequest = AlertConfigSetRequest

class AlertConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """Value carries all the values given in the AlertConfigSetRequest as well
        as any server-generated values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.AlertConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___AlertConfigSetResponse = AlertConfigSetResponse

class DefaultTemplateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key uniquely identifies a DefaultTemplate instance to retrieve.
        This value must be populated.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.alert.v1.alert_pb2.TemplateKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___DefaultTemplateRequest = DefaultTemplateRequest

class DefaultTemplateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.DefaultTemplate:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        DefaultTemplate instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.DefaultTemplate] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___DefaultTemplateResponse = DefaultTemplateResponse

class DefaultTemplateSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.alert.v1.alert_pb2.TemplateKey]] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","time",b"time"]) -> None: ...
global___DefaultTemplateSomeRequest = DefaultTemplateSomeRequest

class DefaultTemplateSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.DefaultTemplate:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.DefaultTemplate] = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> None: ...
global___DefaultTemplateSomeResponse = DefaultTemplateSomeResponse

class DefaultTemplateStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each DefaultTemplate at end.
            * Each DefaultTemplate response is fully-specified (all fields set).
          * start: Returns the state of each DefaultTemplate at start, followed by updates until now.
            * Each DefaultTemplate response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each DefaultTemplate at start, followed by updates
            until end.
            * Each DefaultTemplate response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time"]) -> None: ...
global___DefaultTemplateStreamRequest = DefaultTemplateStreamRequest

class DefaultTemplateStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.DefaultTemplate:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this DefaultTemplate's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the DefaultTemplate value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.DefaultTemplate] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___DefaultTemplateStreamResponse = DefaultTemplateStreamResponse

class TemplateConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key uniquely identifies a TemplateConfig instance to retrieve.
        This value must be populated.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.alert.v1.alert_pb2.TemplateKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___TemplateConfigRequest = TemplateConfigRequest

class TemplateConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        TemplateConfig instance in this response.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.TemplateConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___TemplateConfigResponse = TemplateConfigResponse

class TemplateConfigSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.alert.v1.alert_pb2.TemplateKey]] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","time",b"time"]) -> None: ...
global___TemplateConfigSomeRequest = TemplateConfigSomeRequest

class TemplateConfigSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """
        pass
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.TemplateConfig] = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","time",b"time","value",b"value"]) -> None: ...
global___TemplateConfigSomeResponse = TemplateConfigSomeResponse

class TemplateConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each TemplateConfig at end.
            * Each TemplateConfig response is fully-specified (all fields set).
          * start: Returns the state of each TemplateConfig at start, followed by updates until now.
            * Each TemplateConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each TemplateConfig at start, followed by updates
            until end.
            * Each TemplateConfig response at start is fully-specified, but updates until end may
              be partial.

        This field is not allowed in the Subscribe RPC.
        """
        pass
    def __init__(self,
        *,
        time: typing.Optional[arista.time.time_pb2.TimeBounds] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time"]) -> None: ...
global___TemplateConfigStreamRequest = TemplateConfigStreamRequest

class TemplateConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this TemplateConfig's last modification."""
        pass
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the TemplateConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """

    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.TemplateConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","type",b"type","value",b"value"]) -> None: ...
global___TemplateConfigStreamResponse = TemplateConfigStreamResponse

class TemplateConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """TemplateConfig carries the value to set into the datastore.
        See the documentation on the TemplateConfig struct for which fields are required.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.TemplateConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___TemplateConfigSetRequest = TemplateConfigSetRequest

class TemplateConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value carries all the values given in the TemplateConfigSetRequest as well
        as any server-generated values.
        """
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """
        pass
    def __init__(self,
        *,
        value: typing.Optional[arista.alert.v1.alert_pb2.TemplateConfig] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["time",b"time","value",b"value"]) -> None: ...
global___TemplateConfigSetResponse = TemplateConfigSetResponse

class TemplateConfigSetSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateConfig]:
        """value contains a list of TemplateConfig values to write.
        It is possible to provide more values than can fit within either:
            - the maxiumum send size of the client
            - the maximum receive size of the server
        If this error occurs you must reduce the number of values sent.
        See gRPC "maximum message size" documentation for more information.
        """
        pass
    def __init__(self,
        *,
        values: typing.Optional[typing.Iterable[arista.alert.v1.alert_pb2.TemplateConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___TemplateConfigSetSomeRequest = TemplateConfigSetSomeRequest

class TemplateConfigSetSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.alert.v1.alert_pb2.TemplateKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___TemplateConfigSetSomeResponse = TemplateConfigSetSomeResponse

class TemplateConfigDeleteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key indicates which TemplateConfig instance to remove.
        This field must always be set.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.alert.v1.alert_pb2.TemplateKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___TemplateConfigDeleteRequest = TemplateConfigDeleteRequest

class TemplateConfigDeleteResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key echoes back the key of the deleted TemplateConfig instance."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        deletion. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==DeletedAt will not include this instance.
        """
        pass
    def __init__(self,
        *,
        key: typing.Optional[arista.alert.v1.alert_pb2.TemplateKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","time",b"time"]) -> None: ...
global___TemplateConfigDeleteResponse = TemplateConfigDeleteResponse

class TemplateConfigDeleteSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateKey]:
        """key contains a list of TemplateConfig keys to delete"""
        pass
    def __init__(self,
        *,
        keys: typing.Optional[typing.Iterable[arista.alert.v1.alert_pb2.TemplateKey]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys"]) -> None: ...
global___TemplateConfigDeleteSomeRequest = TemplateConfigDeleteSomeRequest

class TemplateConfigDeleteSomeResponse(google.protobuf.message.Message):
    """TemplateConfigDeleteSomeResponse is only sent when there is an error."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey: ...
    error: typing.Text
    def __init__(self,
        *,
        key: typing.Optional[arista.alert.v1.alert_pb2.TemplateKey] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key"]) -> None: ...
global___TemplateConfigDeleteSomeResponse = TemplateConfigDeleteSomeResponse

class TemplateConfigDeleteAllRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___TemplateConfigDeleteAllRequest = TemplateConfigDeleteAllRequest

class TemplateConfigDeleteAllResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    type: fmp.deletes_pb2.DeleteError.ValueType
    """This describes the class of delete error."""

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """This indicates the error message from the delete failure."""
        pass
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """This is the key of the TemplateConfig instance that failed to be deleted."""
        pass
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp when the key was being deleted."""
        pass
    def __init__(self,
        *,
        type: fmp.deletes_pb2.DeleteError.ValueType = ...,
        error: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        key: typing.Optional[arista.alert.v1.alert_pb2.TemplateKey] = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","key",b"key","time",b"time","type",b"type"]) -> None: ...
global___TemplateConfigDeleteAllResponse = TemplateConfigDeleteAllResponse
